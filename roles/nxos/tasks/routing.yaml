- name: Create an acl for the kubernetes private network
  nxos_acl:
    name: "{{ kube_private_net_acl_name }}"
    seq: 10
    action: permit
    proto: ip
    src: "{{ kube_vlan_ip_address }}/{{ kube_vlan_ip_netmask }}"
    dest: any
    state: present
  tags:
  - kubernetes
  - routing
  - static

# A route map is needed in order to route outgoing traffic via the internal
# network to get it nat-ed. For incoming traffic we just allow responses to
# go back directly via the public sw.
- name: Create route map for outgoing traffic initiated from kubernetes nodes
  nxos_config:
    lines:
      - match ip address {{ kube_private_net_acl_name }}
      - set ip next-hop {{ ebgp_peer_172_ip }}
    parents:
      - interface vlan{{kube_vlan_id}}
      - route-map {{ kube_private_net_acl_name }} permit 10
  when: not ansible_check_mode
  tags:
  - kubernetes
  - routing
  - static

# The following 2 blocks are plain commands as ansible resources are not availbale and
# will appear as "changed" on every run.
- name: Enable proxy arp needed by calico to route packets between pods on different nodes
  nxos_config:
    lines:
      - ip proxy-arp
      - ip local-proxy-arp
    parents: interface vlan{{kube_vlan_id}}
  when: not ansible_check_mode
  tags:
  - kubernetes
  - routing
  - static

- name: Add route-map for internal addresses on vlan {{ kube_vlan_id }}
  nxos_config:
    lines:
      - ip policy route-map {{ kube_private_net_acl_name }}
    parents: interface vlan{{kube_vlan_id}}
  register: ret
  ignore_errors: yes
  when: not ansible_check_mode
  tags:
  - kubernetes
  - routing
  - static

# The above command will fail if route-map {{ kube_private_net_acl_name }} is already attached on the
# interface, so we need to catch that error and fail accordingly.
- fail:
    msg: "{{ ret['msg'] }"
  when:
    - not ansible_check_mode
    - ret['failed']
    - ('PBR is already active on the interface' not in ret['msg'])
  tags:
  - kubernetes
  - routing
  - static

- name: Enable statistics on the route map
  nxos_config:
    lines:
      - route-map {{ kube_private_net_acl_name }} pbr-statistics
  when: not ansible_check_mode
  tags:
  - kubernetes
  - routing
  - static

# Set our null route for the whole public range to be advertised as routes smaller than /24
# will be dropped by external providers
- name: Set next hop for networks to null0 so that the switch advertises the whole range
  nxos_static_route:
    prefix: "{{ item }}
    next_hop: "Null0"
    vrf: "{{ env_vrf }}"
  loop: "{{ networks }}"
  tags:
  - kubernetes
  - routing
  - static

# Remove default route to other sws if any. We will be routing outgoing traffic via the route
# map defined above and for w/e is not covered by that we rely on bgp advertisements.
- name: Make sure no default route goes via public gateway
  nxos_static_route:
    prefix: "0.0.0.0/0"
    next_hop: "{{ ebgp_peer_192_ip }}"
    route_name: default
    vrf: "{{ env_vrf }}"
    state: absent
  tags:
  - parent-switch
  - routing
  - static

- name: Make sure no default route goes via private gateway
  nxos_static_route:
    prefix: "0.0.0.0/0"
    next_hop: "{{ ebgp_peer_172_ip }}"
    route_name: default
    vrf: "{{ env_vrf }}"
    state: absent
  tags:
  - parent-switch
  - routing
  - static

# BGP
- name: Ensure BGP router
  nxos_bgp:
      asn: "{{ bgp_asn }}"
      router_id: "{{ router_id }}"
      vrf: "{{ env_vrf }}"
      state: present
  tags:
  - kubernetes
  - routing
  - bgp

# configure a simple address-family
- name: Configure BGP address family
  nxos_bgp_af:
    asn: "{{ bgp_asn }}"
    vrf: "{{ env_vrf }}"
    afi: ipv4
    safi: unicast
    # For some crazy reason that gets deleted when it is present and added when it is not (every other run or check)
    # Maybe related with https://github.com/ansible/ansible/issues/42136
    networks: "{{ networks }}"
    maximum_paths_ibgp: 10
    distance_ebgp: 230
    distance_ibgp: 20
    distance_local: 220
    additional_paths_send: yes
    additional_paths_receive: yes
    state: present
  tags:
  - kubernetes
  - routing
  - bgp

# k8s bgp neighbors
- name: configure kube ibgp clients
  nxos_bgp_neighbor:
    asn: "{{ bgp_asn }}"
    vrf: "{{ env_vrf }}"
    neighbor: "{{ item }}"
    remote_as: "{{ bgp_asn }}"
    state: present
  loop: "{{ kube_ibgp_neighbors }}"
  tags:
  - kubernetes
  - routing
  - bgp

- name: configure kube ibgp clients afi-safis
  nxos_bgp_neighbor_af:
    asn: "{{ bgp_asn }}"
    vrf: "{{ env_vrf }}"
    neighbor: "{{ item }}"
    afi: ipv4
    safi: unicast
    additional_paths_send: enable
    additional_paths_receive: enable
    state: present
  loop: "{{ kube_ibgp_neighbors }}"
  tags:
  - kubernetes
  - routing
  - bgp

# Set up prefix list to export
- name: set additional config items
  nxos_config:
    lines: "{{ additional_config }}"
  when: not ansible_check_mode
  tags:
  - kubernetes
  - routing
  - bgp

# eBGP peer to advertise internal network
- name: configure eBGP peer to advertise on-prem network
  nxos_bgp_neighbor:
    asn: "{{ bgp_asn }}"
    vrf: "{{ env_vrf }}"
    neighbor: "{{ ebgp_peer_172_ip }}"
    remote_as: "{{ ebgp_peer_172_remote_as }}"
    pwd: "{{ ebgp_peer_172_password }}"
    pwd_type: 3des
    state: present
  diff: no
  tags:
  - kubernetes
  - routing
  - bgp

- name: configure eBGP peer's afi-safi for private network
  nxos_bgp_neighbor_af:
    asn: "{{ bgp_asn }}"
    vrf: "{{ env_vrf }}"
    neighbor: "{{ ebgp_peer_172_ip }}"
    afi: ipv4
    safi: unicast
    prefix_list_out: "{{ internal_prefix_list_out }}"
    state: present
  tags:
  - kubernetes
  - routing
  - bgp

# eBGP peer to advertise public network
- name: configure eBGP peer to advertise public network
  nxos_bgp_neighbor:
    asn: "{{ bgp_asn }}"
    vrf: "{{ env_vrf }}"
    neighbor: "{{ ebgp_peer_192_ip }}"
    remote_as: "{{ ebgp_peer_192_remote_as }}"
    pwd: "{{ ebgp_peer_192_password }}"
    pwd_type: 3des
    state: present
  diff: no
  tags:
  - kubernetes
  - routing
  - bgp

- name: configure eBGP peer's afi-safi for public network
  nxos_bgp_neighbor_af:
    asn: "{{ bgp_asn }}"
    vrf: "{{ env_vrf }}"
    neighbor: "{{ ebgp_peer_192_ip }}"
    afi: ipv4
    safi: unicast
    prefix_list_out: "{{ public_prefix_list_out }}"
    state: present
  tags:
  - kubernetes
  - routing
  - bgp
