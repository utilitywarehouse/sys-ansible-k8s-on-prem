- name: Create {{ env }} kube SVM
  na_ontap_svm:
    state: present
    name: "{{ env }}_kube"
    aggr_list: "{{ kube_aggregate_list }}"
    allowed_protocols:
    - iscsi
    ipspace: "{{ ipspace_name }}"
    use_rest: always
    validate_certs: false
    hostname: "{{ inventory_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
  tags: kube

- name: Create iscsi service on {{ env }} kube SVM
  na_ontap_iscsi:
    state: present
    service_state: started
    vserver: "{{ env }}_kube"
    use_rest: always
    validate_certs: false
    hostname: "{{ inventory_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
  tags: kube

- name: create route for {{ env }} kube outgoing traffic
  na_ontap_net_routes:
    state: present
    destination: 0.0.0.0/0
    gateway: "{{ kube_network_gateway }}"
    vserver: "{{ env }}_kube"
    use_rest: always
    validate_certs: false
    hostname: "{{ inventory_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
  tags: kube

- name: Create {{ env }} kube vserver data lif on controller {{ node_1 }}
  na_ontap_interface:
    state: present
    interface_name: "{{ env }}_kube_data_lif_1"
    home_port: "{{ vlan_port_1 }}"
    home_node: "{{ node_1 }}"
    role: data
    protocols: iscsi
    admin_status: up
    address: "{{ kube_data_lif_1_address }}"
    netmask: "{{ kube_lif_netmask }}"
    vserver: "{{ env }}_kube"
    use_rest: always
    validate_certs: false
    hostname: "{{ inventory_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
  tags: kube

- name: Create {{ env }} kube vserver data lif on controller {{ node_2 }}
  na_ontap_interface:
    state: present
    interface_name: "{{ env }}_kube_data_lif_2"
    home_port: "{{ vlan_port_1 }}"
    home_node: "{{ node_2 }}"
    role: data
    protocols: iscsi
    admin_status: up
    address: "{{ kube_data_lif_2_address }}"
    netmask: "{{ kube_lif_netmask }}"
    vserver: "{{ env }}_kube"
    use_rest: always
    validate_certs: false
    hostname: "{{ inventory_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
  tags: kube

# https://library.netapp.com/ecmdocs/ECMP1804825/html/GUID-0FF33AC9-33B0-4878-9162-A46D3075D775.html
- name: Create {{ env }} kube vserver management lif
  na_ontap_interface:
    state: present
    interface_name: "{{ env }}_kube_mgmt_lif"
    home_port: "{{ vlan_port_1 }}"
    home_node: "{{ node_1 }}"
    role: data
    firewall_policy: mgmt
    protocols: none
    admin_status: up
    address: "{{ kube_mgmt_lif_address }}"
    netmask: "{{ kube_lif_netmask }}"
    vserver: "{{ env }}_kube"
    use_rest: always
    validate_certs: false
    hostname: "{{ inventory_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
  tags: kube

# Trident user
# Create a new Trident user with vsadmin role as proposed by trident docs:
# https://docs.netapp.com/us-en/trident/trident-use/ontap-san-prep.html#authenticate-the-ontap-backend
- name: Create {{ env }} trident user
  na_ontap_user:
    state: present
    name: "{{ env }}_{{ kube_trident_user }}"
    applications: http,ontapi
    authentication_method: password
    set_password: "{{ kube_trident_password }}"
    role_name: "vsadmin"
    vserver: "{{ env }}_kube"
    use_rest: always
    validate_certs: false
    hostname: "{{ inventory_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
  tags: kube

# Create a policy group to be used for kubernetes volumes.
- name: create qos policy group for kube volumes
  netapp.ontap.na_ontap_qos_policy_group:
    state: present
    name: "{{ env }}-pvc-fixed"
    fixed_qos_options:
      max_throughput_iops: "{{ kube_pvc_qos_max_throughput_iops }}"
      min_throughput_iops: "{{ kube_pvc_qos_min_throughput_iops }}"
      capacity_shared: false
    vserver: "{{ env }}_kube"
    use_rest: always
    validate_certs: false
    hostname: "{{ inventory_hostname }}"
    username: "{{ netapp_username }}"
    password: "{{ netapp_password }}"
  tags: kube,qos
