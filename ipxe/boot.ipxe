#!ipxe
#
# Inspired from: https://github.com/danderson/netboot/blob/master/pixiecore/boot.ipxe
#
# The entire reason for the existence of this script is that iPXE very
# eagerly configures DHCP as soon as it gets a DHCP response, and
# because of this it might miss the DHCP response that tells it
# how to boot. In this situation, `autoboot` (the default command)
# just fails and falls out of the PXE boot codepath, so we end up with
# machines that sometimes fail to "catch" the network boot.
#
# This script implements what the ipxe documentation recommends, which
# is to just retry the `dhcp` command a bunch until ipxe does see a
# DHCP response. It's quite ugly, and a proper fix should really
# get upstreamed to ipxe, but for right now, this works.

set attempts:int32 10
set x:int32 0

set user-class iPXE

# Try to get a filename from DHCP, retrying up to 10 times if we fail.
:loop
dhcp || goto nodhcp
isset ${filename} || goto nobootconfig
goto boot

:nodhcp
echo No DHCP response, retrying (attempt ${x}/${attempts})
goto retry

:nobootconfig
echo No DHCP response, retrying (attempt ${x}/${attempts})
goto retry

:retry
iseq ${x} ${attempts} && goto fail ||
inc x
goto loop

# Got a filename from DHCP, that's the actual boot script, off we go!
:boot
chain ${filename}

# In case dhcp boot failed just reboot the node.
:fail
echo Failed to get a DHCP response after ${attempts} attempts
echo
echo Rebooting in 5 seconds...
sleep 5
reboot
